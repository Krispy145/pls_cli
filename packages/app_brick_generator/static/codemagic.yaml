definitions:
  android_signing:
    - &keystore_ref {{project_name.snakeCase()}}_keystore
  integrations: &integrations
    app_store_connect:{{project_name.titleCase()}} 
  google_publishing: &google_publishing
    credentials: ${{project_name.constantCase()}}_SERVICE_ACCOUNT
    track: alpha

  build_environment: &build_environment
    flutter: stable
    xcode: latest
    cocoapods: default

  stage_trigger: &stage_trigger
    events:
      - tag
    tag_patterns:
      - include: true
        pattern: staging/*
  prod_trigger: &prod_trigger
    events:
      - tag
    tag_patterns:
      - include: true
        pattern: prod/*

  artifacts:
    - &ios_app $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
    - &xcode_log /tmp/xcodebuild_logs/*.log
    - &ipa build/ios/ipa/*.ipa
    - &dsym $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    - &apk build/**/outputs/apk/**/*.apk
    - &aab build/**/outputs/bundle/**/*.aab
    - &mapping build/**/outputs/**/mapping.txt
    - &flutter_log flutter_drive.log

  notify_slack: &notify_slack
    slack:
      channel: "#flutter-app-releases"
      notify:
        success: false
        failure: false

  android_scripts:
    - &android_pre_build
      name: Android Pre Build
      script: |
        echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
  ios_scripts:
    - &keychain_init
      name: "set up keychain to be used for codesigning using Codemagic CLI 'keychain' command"
      script: |
        keychain initialize
    - &flutterfire_install
      name: Flutter fire install
      script: |
        flutter pub global activate flutterfire_cli 0.3.0-dev.18 --overwrite
    - &xcode_setup
      name: Fetch signing files and setup Xcode
      script: |
        app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
        keychain add-certificates
        xcode-project use-profiles
    - &install_pods
      name: Installe Pods
      script: |
        find . -name "Podfile" -execdir pod install \;

workflows:
  ios-staging:
    max_build_duration: 60
    name: IOS Staging
    instance_type: mac_mini_m1
    integrations:
      <<: *integrations
    triggering:
      <<: *stage_trigger
    environment:
      <<: *build_environment
      groups:
        - packages-ssh-key
        - app-store-cert
        - maps-key
      vars:
        CM_CLONE_DEPTH: 1
    scripts:
      - *keychain_init
      - *xcode_setup
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - *install_pods
      - *flutterfire_install
      - name: Check the installation of flutter fire
        script: flutterfire -h
      - name: Flutter build ipa
        script: |
          flutter build ipa --release --dart-define=APPLE_MAPS_KEY="$APPLE_MAPS_KEY" --flavor staging -t lib/main_staging.dart  \
            --export-options-plist=/Users/builder/export_options.plist
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      <<: *notify_slack
      app_store_connect:
        auth: integration
        submit_to_app_store: false

  ios-production:
    max_build_duration: 60
    name: IOS Production
    instance_type: mac_mini_m1
    integrations:
      <<: *integrations
    triggering:
      <<: *prod_trigger
    environment:
      <<: *build_environment
      groups:
        - packages-ssh-key
        - app-store-cert
        - maps-key
      vars:
        CM_CLONE_DEPTH: 1
    scripts:
      - *keychain_init
      - *xcode_setup
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - *install_pods
      - *flutterfire_install
      - name: Flutter build ipa
        script: |
          flutter build ipa --release --dart-define=APPLE_MAPS_KEY="$APPLE_MAPS_KEY" --flavor production -t lib/main_production.dart  \
            --export-options-plist=/Users/builder/export_options.plist
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      <<: *notify_slack
      app_store_connect:
        auth: integration
        submit_to_app_store: false

  android-staging:
    name: Android Staging
    instance_type: linux
    max_build_duration: 60
    triggering:
      <<: *stage_trigger
    environment:
      <<: *build_environment
      android_signing:
        - *keystore_ref
      groups:
        - packages-ssh-key
        - google_play_credentials
        - maps-key
      vars:
        CM_CLONE_DEPTH: 1
    scripts:
      - *android_pre_build
      - name: Build Android
        script: flutter build appbundle --release --dart-define=ANDROID_MAPS_KEY="$ANDROID_MAPS_KEY" --flavor staging -t lib/main_staging.dart
    artifacts:
      - *mapping
      - *flutter_log
      - *apk
      - *aab
    publishing:
      <<: *notify_slack
      google_play:
        <<: *google_publishing

  android-production:
    name: Android Prod
    instance_type: linux
    max_build_duration: 60
    triggering:
      <<: *prod_trigger
    environment:
      <<: *build_environment
      android_signing:
        - *keystore_ref
      groups:
        - maps-key
        - packages-ssh-key
        - google_play_credentials
      vars:
        CM_CLONE_DEPTH: 1
    scripts:
      - *android_pre_build
      - name: Build Android
        script: flutter build appbundle --release --dart-define=ANDROID_MAPS_KEY="$ANDROID_MAPS_KEY" --flavor production -t lib/main_production.dart
    artifacts:
      - *mapping
      - *flutter_log
      - *apk
      - *aab
    publishing:
      <<: *notify_slack
      google_play:
        <<: *google_publishing
