# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: ["develop", "feat/actions_ssh"]
  pull_request:
    branches: ["develop"]

jobs:
  build:
    runs-on: local-ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: flutter --version

      - name: Set up SSH keys for private repo access
        id: ssh-agent-setup
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ secrets.PACKAGES_SSH_KEY }}" | ssh-add -
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_OUTPUT
          echo "SSH_AGENT_PID=$SSH_AGENT_PID" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          flutter pub get
          cd api
          flutter pub get
        env:
          SSH_AUTH_SOCK: "${{ steps.ssh-agent-setup.outputs.SSH_AUTH_SOCK }}"
          SSH_AGENT_PID: "${{ steps.ssh-agent-setup.outputs.SSH_AGENT_PID }}"

      # Uncomment this step to verify the use of 'dart format' on each commit.
      - name: Verify formatting
        run: |
          dart format $(find lib -name "*.dart" -not \( -name "*.*freezed.dart" -o -name "*.*g.dart" -o -name "*.*chopper.dart" \) ) -o none --set-exit-if-changed

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze .
